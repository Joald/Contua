{#
  To run this, import library.cont as well.
}#

d :
@{d}(a -> b -> c) -> [a] -> [b] -> Maybe c ::
joinSafeHeads f xs ys c = match Pair xs ys with
  | Pair (h1:_) (h2:_) => f h1 h2 (\x.c (Just x))
  | Pair _ _ => c Nothing;


plusThree x c = c (x + 3);

add x y c = c (x + y);

Maybe Int ::
main = \c .
  contMap plusThree [3, 1, 3, 7] \l .
  joinSafeHeads add l (4 : 2 : 12 : []) c;

